"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageName = void 0;
class ImageName {
    registry;
    image;
    tag;
    string;
    constructor(registry, image, tag) {
        this.registry = registry;
        this.image = image;
        this.tag = tag;
        if (this.registry) {
            if (this.tag.startsWith("sha256:")) {
                this.string = `${this.registry}/${this.image}@${this.tag}`;
            }
            else {
                this.string = `${this.registry}/${this.image}:${this.tag}`;
            }
        }
        else if (this.tag.startsWith("sha256:")) {
            this.string = `${this.image}@${this.tag}`;
        }
        else {
            this.string = `${this.image}:${this.tag}`;
        }
    }
    equals(other) {
        return this.registry === other.registry && this.image === other.image && this.tag === other.tag;
    }
    static fromString(string) {
        const registry = this.getRegistry(string);
        const stringWithoutRegistry = registry ? string.split("/").slice(1).join("/") : string;
        if (stringWithoutRegistry.includes("@")) {
            const [image, tag] = stringWithoutRegistry.split("@");
            return new ImageName(registry, image, tag);
        }
        else if (stringWithoutRegistry.includes(":")) {
            const [image, tag] = stringWithoutRegistry.split(":");
            return new ImageName(registry, image, tag);
        }
        else {
            return new ImageName(registry, stringWithoutRegistry, "latest");
        }
    }
    static getRegistry(string) {
        const parts = string.split("/");
        if (parts.length > 1 && this.isRegistry(parts[0])) {
            return parts[0];
        }
    }
    static isRegistry(string) {
        return string.includes(".") || string.includes(":") || string === "localhost";
    }
}
exports.ImageName = ImageName;
//# sourceMappingURL=image-name.js.map